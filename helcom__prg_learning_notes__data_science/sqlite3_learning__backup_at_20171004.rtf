{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 ArialMT;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red27\green29\blue31;\red235\green236\blue237;\red36\green38\blue41;
\red13\green0\blue129;\red43\green39\blue19;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid3\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww21140\viewh29740\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \{ sqlite learning \}\
----------------------------\
( 20130712 )\
\
\
\
resources\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
\
\
nice basic tutorial\
(this I've also saved to disk)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://souptonuts.sourceforge.net/readme_sqlite_tutorial.html"}}{\fldrslt \cf0 http://souptonuts.sourceforge.net/readme_sqlite_tutorial.html}}\
\
- command line sqlite tutorial\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.sqlite.org/sqlite.html"}}{\fldrslt \cf0 http://www.sqlite.org/sqlite.html}}\
\
- using sql for lightweight data anlaysis (by rufus)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://schoolofdata.org/2013/03/26/using-sql-for-lightweight-data-analysis/"}}{\fldrslt \cf0 https://schoolofdata.org/2013/03/26/using-sql-for-lightweight-data-analysis/}}\
\
- quick guide to sqlite commands \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.sqlite.org/cli.html"}}{\fldrslt \cf0 http://www.sqlite.org/cli.html}}\
\
w3schools\'92 sql intro \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://www.w3schools.com/sql/default.asp"}}{\fldrslt \cf0 https://www.w3schools.com/sql/default.asp}}\
\
\
quick various tidbits\'a0: \
\'97\'97\'97\'97\'97\
\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl400
\ls1\ilvl2\cf0 how to matplotlib on a remote server ( without a display ) \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl400
\ls1\ilvl2{\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/5503601/python-headless-matplotlib-pyplot"}}{\fldrslt \cf0 https://stackoverflow.com/questions/5503601/python-headless-matplotlib-pyplot}} \
how to connect sqlite3 with python \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl400
\ls1\ilvl2{\field{\*\fldinst{HYPERLINK "http://pythoncentral.io/introduction-to-sqlite-in-python/"}}{\fldrslt \cf0 http://pythoncentral.io/introduction-to-sqlite-in-python/}} \
\pard\pardeftab720
\cf0 more : {\field{\*\fldinst{HYPERLINK "http://www.sqlitetutorial.net/sqlite-python/sqlite-python-select/"}}{\fldrslt http://www.sqlitetutorial.net/sqlite-python/sqlite-python-select/}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
prototyping environments\
\'97\'97\'97\'97\'97\'97\
\
- online prototyping environment \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://sqlfiddle.com/"}}{\fldrslt \cf0 http://sqlfiddle.com/}}\
\
\
\
code\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\
\
\
datatypes of sqlite3\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
( {\field{\*\fldinst{HYPERLINK "https://sqlite.org/datatype3.html"}}{\fldrslt SQLite page}} )\
\
-  
\f1 \cf2 \cb3 NULL
\f0 \cf0 \cb1 \
- 
\f1 \cf2 \cb3 INTEGER
\f0 \cf0 \cb1 \
- 
\f1 \cf2 \cb3 REAL
\f0 \cf0 \cb1  ( floating point num ) \
- 
\f1 \cf2 \cb3 TEXT
\f0 \cf0 \cb1  ( utf-8. utf-16be, or utf-16le\
- 
\f1 \cf2 \cb3 BLOB
\f0 \cf0 \cb1  ( blob of data, stored exactly as it is input ) \
\
\
import data, eg csv \
\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720

\f1 \cf4 \cb3 sqlite> \cf5 create\cf4  \cf5 table\cf4  foo(a, b);  	// make schema \
sqlite> .mode csv				// set to csv mode\
sqlite> .import test.csv foo		// do the importing\cf6 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
optional : \
set separator and import\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320
\ls2\ilvl0
\f1 \cf2 \cb3 {\listtext	\'95	}sqlite> .separator "\\t" ---IMPORTANT! should be in double quotes\
{\listtext	\'95	} sqlite> .import afile.csv tablename-to-import-to
\f2 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \
\
how to check the schema ( datatypes ) of a table\
\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720

\f1 \cf4 \cb3 sqlite> schema table_name  	// make schema \
sqlite> CREATE TABLE table_name( f1 varchar(10), f2 varchar(10) );\
\pard\pardeftab720

\f0 \cf0 \cb1 another example \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf4 \cb3 insert into test (f2) values( 00 );
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
how to limit output : \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf4 \cb3 sqlite> select * from test limit 1;\
1|2\cf0 \cb1 \CocoaLigature0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \CocoaLigature1 \
\
how to print from a certain line : \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf4 \cb3 sqlite> select * from test offset 1;\
|0\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
\
create a table from the command line\
------------------\
code (from bash):\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf4 \cb3 sqlite3 databasename.db
\f0\i \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0 \cf0 \
\
define table\
----------------\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite3 databasename.db "create table t1 ( t1key INTEGER PRIMARY KEY, data TEXT, num double, timeEnter DATE);"\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
or just (from inside sqlite3 )\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3  "create table t1 ( t1key INTEGER PRIMARY KEY, data TEXT, num double, timeEnter DATE);"\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 s\
\
insert values\
---------------\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite3 databasename.db "insert into t1 (data, num) values ('This is sample data', 3);"\
sqlite3 databasename.db "insert into t1 (data, num) values ('more sample data', 6);"\
sqlite3 databasename.db "insert into t1 (data, num) values ('and a bit more', 9);"\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
!!! NOTE (above ) : the columns for inserting data are specified 
\f1 \cf2 \cb3 ( data, num )
\f0 \cf0 \cb1  - there are in fact more data columns.\
\
show/select particular values\
------------------\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite3 databasename.db "select * from t1"
\f0 \cf0 \cb1 \
# show only the first two rows (there are three rows by now)\

\f1 \cf2 \cb3 sqlite3 databasename.db "select * from t1 limit 2"
\f0 \cf0 \cb1 \
\
// shows only rows where the num (third) column has a value >3 and <12\
s
\f1 \cf2 \cb3 qlite3 databasename.db "SELECT * from t1  WHERE num > 3 AND WHERE num < 12 "
\f0 \cf0 \cb1 \
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 sqlite> select * from shippinglists02 where HELCOM_Detail_ShipType = "Yatch" limit 100 ;\
1000239|316002960|CFK4220|Canada|A|2006|MQ2|48.6|8|3|467|12|Other|Yatch\
1006829|310380000|ZCDF7|Bermuda|A|2006|LE GRAND BLEU|108.3|17.1|5.05|5556|1666|Other|Yatch\
1006881|319622000|ZCGA2|Cayman Islands|A|2006|HAMPSHIRE|50|10|3.4|685|205|Other|Yatch\
1007287|319741000|ZCGS3|Cayman Islands|A|2006|SKAT|70.7|13.2|3.8|1998|599|Other|Yatch\
\'85 etc\'85\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
\
\
DISTINCT\
------------------\
select unqiue values in a given column ( or unique combinations of several columns ) \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 SELECT DISTINCT columnName FROM table
\f0 \cf0 \cb1 \
\
// specific \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 SELECT DISTINCT customerID FROM orders order by customerid;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 // two column unique combos \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 SELECT DISTINCT customerID, shipperid FROM orders order by shipperid;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
select similar \'85\'a0with LIKE \
------------------\
( one can also do regular expressions with this :) \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 SELECT * FROM categories WHERE description LIKE \'91%tea%\'92;
\f0 \cf0 \cb1 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf4 \cb3 > 1|Beverages|Soft drinks, coffees, teas, beers, and ales
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
IN \
\'85\'a0allows one to specify several values in the WHERE clause\
( the IN operator is sort of like writing several OR conditions )\
------------------\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0*\'a0FROM\'a0Customers\
WHERE\'a0Country\'a0IN\'a0('Germany',\'a0'France',\'a0'UK');
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0*\'a0FROM\'a0Products\
WHERE\'a0(Price\'a0BETWEEN\'a010\'a0AND\'a020)\
AND\'a0NOT\'a0CategoryID\'a0IN\'a0(1,2,3);
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
AS (alisases)\
------------------\
Give something, or an expression, a name, using AS, eg\'85\'a0\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select o.orderID, o.orderdate, c.customername from orders as o, customers as c where c.customerid=o.customerid;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0Orders.OrderID, Orders.OrderDate, Customers.CustomerName\
FROM\'a0Customers, Orders\
WHERE\'a0Customers.CustomerName="Around the Horn"\'a0ANDCustomers.CustomerID=Orders.CustomerID;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \
BETWEEN \
------------------\
\'85\'a0selects values between a given value range \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select price from products where price between 10 and 50 order by price;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
\
\
INNER JOIN \
-----------\
the intersection of sets\'85\'a0i.e. an AND operation\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select * from orders inner join customers on orders.customerid=customers.customerid and country like "%portugal%"
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
LEFT JOIN \
-----------\
returns all the items from the left dataset, plus the matching rows from the right dataset.\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0Customers.CustomerName, Orders.OrderID\
FROM\'a0Customers\
LEFT\'a0JOIN\'a0Orders\'a0ON\'a0Customers.CustomerID = Orders.CustomerID\
ORDER\'a0BY\'a0Customers.CustomerName;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
RIGHT JOIN \
-----------\
returns all the items from the right dataset, plus the matching rows from the left dataset.\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0Customers.CustomerName, Orders.OrderID\
FROM\'a0Customers\
RIGHT\'a0JOIN\'a0Orders\'a0ON\'a0Customers.CustomerID = Orders.CustomerID\
ORDER\'a0BY\'a0Customers.CustomerName;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
FULL OUTER JOIN \
-----------\
returns all records, from left and right datasets, where there is a match\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0Customers.CustomerName, Orders.OrderID\
FROM\'a0Customers\
FULL\'a0OUTER\'a0JOIN\'a0Orders\'a0ON\'a0Customers.CustomerID=Orders.CustomerID\
ORDER\'a0BY\'a0Customers.CustomerName;\
\pard\pardeftab720

\f0 \cf0 \cb1 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 SELF JOIN\
-----------\
A self join is a regular join, but where the table is joined with itself .\
I.e. one does an internal operation on the table, comparing elements of the table with itself. \
Eg. the following query allows one to create a list of customers within the same city. \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0A.CustomerName\'a0AS\'a0CustomerName1, B.CustomerName\'a0AS\'a0CustomerName2,A.City\
FROM\'a0Customers A, Customers B\
WHERE\'a0A.CustomerID <> B.CustomerID\
AND\'a0A.City = B.City\'a0\
ORDER\'a0BY\'a0A.City;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
UNION (ALL)\
-----------\
Combines the results of two or more SELECT statements\
- Each SELECT statement within UNION must have the same number of columns.\
- The columns must also have similar data types\
- The columns in each SELECT statements must also be in the same order\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0City\'a0FROM\'a0Customers\
\pard\pardeftab720

\f4\b \cf2 UNION
\f1\b0 \
SELECT\'a0City\'a0FROM\'a0Suppliers\
ORDER\'a0BY\'a0City;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
(union all - takes care of duplicate values ) \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0City\'a0FROM\'a0Customers\
UNION\'a0ALL\
SELECT\'a0City\'a0FROM\'a0Suppliers\
ORDER\'a0BY\'a0City;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
( union with where ) \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0City, Country\'a0FROM\'a0Customers\
WHERE\'a0Country='Germany'\
UNION\
SELECT\'a0City, Country\'a0FROM\'a0Suppliers\
WHERE\'a0Country='Germany'\
ORDER\'a0BY\'a0City;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
( union all with where ) \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0City, Country\'a0FROM\'a0Customers\
WHERE\'a0Country='Germany'\
UNION\'a0ALL\
SELECT\'a0City, Country\'a0FROM\'a0Suppliers\
WHERE\'a0Country='Germany'\
ORDER\'a0BY\'a0City;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
GROUP BY \
-----------\
Used to group results by values in particular columns. \
( Often used in combination with aggregate functions ( count, max, min, sum, avg )\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0COUNT(CustomerID), Country\
FROM\'a0Customers\
GROUP\'a0BY\'a0Country;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
// similar to the above, but orders it by the number of customers \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0COUNT(CustomerID), Country\
FROM\'a0Customers\
GROUP\'a0BY\'a0Country\
ORDER\'a0BY\'a0COUNT(CustomerID)\'a0DESC;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
HAVING\
-----------\
A way of signifying/asking for particular properties, a bit like WHERE. \
However, as WHER can\'92t be used by aggregate functions, HAVING can. \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT COUNT( CustomerID), Country\
FROM Customers\
GROUP BY Country\
HAVING COUNT( CustomerID ) > 5;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
// sightly modified version of the above \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT COUNT( CustomerID), Country\
FROM Customers\
WHERE CustomerID > 3    //  << EG WITH WHERE\
GROUP BY Country\
HAVING COUNT( CustomerID ) > 5;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
EXISTS\
-----------\
For testing whether a record exists at all, in a subquery. \
The EXISTS operator returns true if the subquery returns one or more records.\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT SupplierName\
FROM Suppliers\
WHERE EXISTS (SELECT ProductName FROM Products WHERE SupplierID = Suppliers.supplierId AND Price < 20 );\
\pard\pardeftab720

\f0 \cf0 \cb1 \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT SupplierName\
FROM Suppliers \
WHERE EXISTS ( SELECT ProductName FROM Products WHERE SupplierId = Suppliers.supplierId AND Price = 22 );
\f0 \cf0 \cb1 \
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 AND and ALL\
-----------\
Are like AND/OR in searches, in conjunction with which search queries match. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 Need
\b0  to be used with WHERE and HAVING clauses. \
Any returns true if any subquery matches. \
All returns true only if all subquery matches, match. \
\

\b ( NOTE : DOESN\'92T WORK SO WELL WITH SQLITE3 )
\b0 \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT ProductName\
FROM Products\
WHERE ProductID = ANY ( SELECT ProductID FROM OrderDetails WHERE Quantity = 10 );
\f0 \cf0 \cb1 \
\

\f1 \cf2 \cb3 SELECT\'a0ProductName\
FROM\'a0Products\
WHERE\'a0ProductID =\'a0ANY\'a0(SELECT\'a0ProductID\'a0FROM\'a0OrderDetails\'a0WHERE\'a0Quantity >\'a099);
\f0 \cf0 \cb1 \
\

\f1 \cf2 \cb3 SELECT\'a0ProductName\
FROM\'a0Products\
WHERE\'a0ProductID =\'a0ALL\'a0(SELECT\'a0ProductID\'a0FROM\'a0OrderDetails\'a0WHERE\'a0Quantity =\'a010);
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
SELECT INTO\
-----------\
Copies the rests of a query into  a new table. \
Can also copy only some of the columns into the new table. \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 ( NOTE : DOESN\'92T WORK SO WELL WITH SQLITE3 )
\b0 \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT * INTO CustomersBackup2017\
FROM Customers;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0*\'a0INTO\'a0CustomersBackup2017\'a0IN\'a0'Backup.mdb'\
FROM\'a0Customers;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
// Copies only the German companies\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0*\'a0INTO\'a0CustomersGermany\
FROM\'a0Customers\
WHERE\'a0Country =\'a0'Germany';\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 // copies data from several tables into a new table 
\f3 \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0Customers.CustomerName, Orders.OrderID\
INTO\'a0CustomersOrderBackup2017\
FROM\'a0Customers\
LEFT\'a0JOIN\'a0Orders\'a0ON\'a0Customers.CustomerID = Orders.CustomerID;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 // to copy the schema of another table \
// ( add a condition that can\'92t be satisfied, and you get an empty table ) \
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT\'a0*\'a0INTO\'a0newtable\
FROM\'a0oldtable\
WHERE\'a01\'a0=\'a00;
\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
INSERT INTO SELECT\
-----------\
Copies data from one table and inserts it inot another \
( requires that data types in the source and destination tables match )\
( the existing records in the target table are unaffected )\
\
// copies Suppliers into Customers ( columns without data will contain null )\
\pard\pardeftab720

\f1 \cf2 \cb3 INSERT\'a0INTO\'a0Customers (CustomerName,\'a0City, Country)\
SELECT\'a0SupplierName, City, Country\'a0FROM\'a0Suppliers;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 // copies Suppliers into Customers (fills all columns )\
\pard\pardeftab720

\f1 \cf2 \cb3 INSERT\'a0INTO\'a0Customers (CustomerName, ContactName, Address, City, PostalCode,Country)\
SELECT\'a0SupplierName, ContactName, Address, City, PostalCode,\'a0Country\'a0FROMSuppliers;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 // copies As above, but only copies German customers\
\pard\pardeftab720

\f1 \cf2 \cb3 INSERT\'a0INTO\'a0Customers (CustomerName,\'a0City, Country)\
SELECT\'a0SupplierName, City, Country\'a0FROM\'a0Suppliers\
WHERE\'a0Country='Germany';
\f3 \cf0 \cb1 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 CREATE VIEW\
-----------\
Creates and stores a particular view onto the data, as a variable, which persists through restarts.\
 ( Variable === V_Customer, in the example below )\
\
\pard\pardeftab720

\f1 \cf2 \cb3 CREATE VIEW V_Customer\
AS SELECT First_Name, Last_Name, Country\
FROM Customer;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 // more advanced
\f3 \
\pard\pardeftab720

\f1 \cf2 \cb3 CREATE VIEW V_REGION_SALES\
AS SELECT A1.Region_Name REGION, SUM(A2.Sales) SALES\
FROM Geography A1, Store_Information A2\
WHERE A1.Store_Name = A2.Store_Name\
GROUP BY A1.Region_Name;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 TRUNCATE TABLE\
-----------\
Remote the entries from the table, but not the table itself. \
Faster and less resource intensive than DELETE FROM, apparently \
\
\pard\pardeftab720

\f1 \cf2 \cb3 TRUNCATE TABLE Customer;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\
CONCATENATE\
-----------\
Allows concatenating several variables into one string .\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT CONCAT(Region_Name, Store_Name) FROM Geography\'a0\
WHERE Store_Name = 'Boston';\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 // oracle syntax, which works nicely with sqlite3
\f3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select  city||''||country from suppliers;
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f3 \cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 SUBSTRING / SUBSTR()\
-----------\
Fetches portions of a string - as in javascript \
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT SUBSTR (Store_Name, 3)\'a0\
FROM Geography\'a0\
WHERE Store_Name = 'Los Angeles';\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\pardeftab720

\f0 \cf0 // combine it with the concatenate commands :) 
\f3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select  substr(city,0,3)||'/'||substr(country,0,3) from suppliers;
\f3 \cf0 \cb1 \
\pard\pardeftab720
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 INSTR  ( 
\b <
\b0  alas, not so sqlite3 compatible :( ) \
-----------\
Function for finding the start of a pattern in a string. \
( Maybe Index is the relevant JS equivalent )\
\
\pard\pardeftab720

\f1 \cf2 \cb3 SELECT INSTR (Store_Name, 'o')\'a0\
FROM Geography\'a0\
WHERE Store_Name = 'Los Angeles';\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \
\
TRIM  \
-----------\
Removes bits and pieces of text from  a string \
\
\pard\pardeftab720

\f1 \cf2 \cb3 TRIM( [ [LOCATION] [remstr] FROM ] str)\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 LENGTH  \
-----------\
Length of a string \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select length( country) from suppliers;\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 REPLACE\
-----------\
Replaces - something in string str1, where str2 occurs, replace it with str3\
\
\pard\pardeftab720

\f1 \cf2 \cb3 REPLACE (str1, str2, str3)\
\pard\pardeftab720

\f3 \cf0 \cb1 \
\
\
\pard\pardeftab720

\f0 \cf0 OVER\
\'97\'97\'97\'97\
Something about partitions\'85\'a0{\field{\*\fldinst{HYPERLINK "http://www.sqlservercentral.com/articles/Over+Clause/132079/"}}{\fldrslt read more here \'85\'a0}}
\f3 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\pardeftab720
\cf0 \
\
\
\
\pard\pardeftab720

\f0 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 offset - from where things begin\
-------\
( there are three rows, but this only starts at the third one, and shows only a single row in any event )\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite3 databasename.db "select * from t1 limit 1 offset 2";\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
\
\
show the table names\
-----------\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite3 databasename.db ".table"\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \cb1 \
\
\
\
write the table data to a csv file\
------------------\
(remember the writing to stdout is where the magic writing actually/finally happens)\
( code )\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf2 \cb3 sqlite> .mode csv\
sqlite> .output results.csv\
sqlite> SELECT * from t1;\
sqlite> .output stdout\
sqlite> .quit
\f0 \cf0 \cb1 \
\
\
\
\
list the actions done to the database\
------------\
sqlite3 databasename.db ".dump";\
\
\
\
\
various random example queries \
\'97\'97\'97\'97\
\
// takes the shipping list and extracts the count of ships, per country, that have a net tonnage btw 80-90 tonnes, groups by country.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select count(imo), country from hships where Net_tonnage > 80 AND Net_tonnage < 90 group by country order by count(imo);
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
// displays country-ordered list by the sum( net_tonnage ) per country ( where the net tonnage is over 1500 tonnes ) \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb3 select sum( net_tonnage ), country from hships group by country having sum( net_tonnage ) > 1500 order by country;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \cb1 \
\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
}